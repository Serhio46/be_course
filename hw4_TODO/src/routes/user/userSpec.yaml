paths:
  /api/users/register:
    post:
      tags:
        - User
      summary: Create users.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  accessToken:
                    $ref: '#/components/schemas/AccessToken'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
  /api/users/login:
    post:
      tags:
        - User
      summary: Login users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  accessToken:
                    $ref: '#/components/schemas/AccessToken'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - id
        - name
    AccessToken:
      type: string
    Unauthorized:
      type: object
      properties:
        message:
          type: string
          example: 'Unauthorized'
        statusCode:
          type: integer
          example: 401
    UserCredentials:
      type: object
      properties:
        userName:
          type: string
          description: "User's login name"
          example: 'john_doe'
        password:
          type: integer
          description: "User's password"
          format: password
          example: 'password'
      required:
        - username
        - password
